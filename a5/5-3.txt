% Write Prolog queries to ask the following questions. 
% You may use all thirteen predicates above; 
% assume that you have correct solutions to Problems 1 and 2.  
[user].
  % to remove duplicates of any results.
  % do this:
  % get_unique_list(+DupList, -UniqueList).
  % precondition: UniqueList does not have any duplicates.
  get_unique_list([], _).
  get_unique_list([H|T], UniqueList) :- 
    \+  member(H, UniqueList), 
    get_unique_list(T, [H|UniqueList]).
  get_unique_list([H|T], UniqueList) :- 
    member(H, UniqueList), 
    get_unique_list(T, UniqueList).

  % get all results of a query without duplicates
  % get_all_results(+Template, +Predicate, -Results)
  get_all_results(Template, Predicate, Results) :- 
    findall(Template, Predicate, DupResults), 
    get_unique_list(DupResults, Results).
  
  end_of_file.

[user].
  query_a:- ever_married_to(charles, Mo),
    parent_of(Mo, catherine),
    not(father_of(charles, catherine)).
  end_of_file.

% a) Is Charles the step father of Catherine? [should respond with no]
query_a.


% b) Who are the grandchildren of Diana? 
% [should respond with George, Charlotte, Louis, Archie and Lilibet]
mother_of(diana, PA),
  parent_of(PA, Chl).

% c) Who are the senior royal descendants of Charles? 
% [should respond with William, George, Charlotte and Louis]
{SR}/(senior_royal(SR),
  parent_of(charles, SR);
senior_royal(SR),
  parent_of(charles, _P),
  parent_of(_P, SR)).

% d) Who are the biological parents of both William and Harry? 
% [should respond with Charles and Diana]
parents_of(Fa, Ma, william), parents_of(Fa, Ma, harry).

% d2) Who has a brother? 
% [should respond with William, Harry, George and Louis]
parent_of(Pa, X), son_of(Pa, Bro), X \= Bro.

{X}/(parent_of(Pa, X), son_of(Pa, Bro), X \= Bro).

% who is a brother? (this should return William, Harry, George, Louis)
{B}/(parent_of(Pa, B), son_of(Pa, Bro), B \= Bro).


